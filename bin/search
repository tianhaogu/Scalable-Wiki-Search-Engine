#!/bin/bash
# search

# Stop on errors, print commands
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
set -x

usage() {
    echo "Usage: $0 (start|stop|restart|status)"
}

if [ $# -ne 1 ]; then
    usage
    exit 1
fi

case $1 in
    "start")
        set +o pipefail
        NPROCS1=$(pgrep -f "flask run --host 0.0.0.0 --port 900[0-2]" | wc -l)
        NPROCS2=$(pgrep -f "flask run --host 0.0.0.0 --port 8000" | wc -l)
        set -o pipefail
        if [ "$NPROCS1" -ne 3 ]; then
            echo "Error: index server is not running"
            echo "Try ./bin/index start"
            exit 2
        elif [ "$NPROCS2" -eq 1 ]; then
            echo "Error: search server is already running"
            exit 3
        else
            echo "starting search server ..."
            mkdir -p var/log
            rm -f var/log/search.log
            FLASK_APP=search flask run --host 0.0.0.0 --port 8000 &> var/log/search.log &
        fi
        ;;
    "stop")
        echo "stopping search server ..."
        pkill -f 'flask run --host 0.0.0.0 --port 8000' || true
        ;;
    "restart")
        echo "stopping search server ..."
        pkill -f 'flask run --host 0.0.0.0 --port 8000' || true
        echo "starting search server ..."
        mkdir -p var/log
        rm -f var/log/search.log
        FLASK_APP=search flask run --host 0.0.0.0 --port 8000 &> var/log/search.log &
        ;;
    "status")
        NPROCS3=$(pgrep -f "flask run --host 0.0.0.0 --port 8000" | wc -l)
        if [ "$NPROCS3" -eq 0 ]; then
            echo "search server stopped"
            exit 1
        else
            echo "search server running"
            exit 0
        fi
        ;;
    *)
        usage
        exit 1
        ;;
esac
